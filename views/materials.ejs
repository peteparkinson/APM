<!DOCTYPE html>
<html>

<head>
    <link rel='stylesheet' href='stylesheets/style.css'>

    <script type="text/javascript">

        const allMatStr = JSON.parse('<%- matStr %>');

        //auto expand textarea
        function adjust_textarea(h) {
            h.style.height = "20px";
            h.style.height = (h.scrollHeight) + "px";
        }

        // filters the list of materials
        // read more on this: https://codereview.stackexchange.com/questions/140420/filter-options-of-select-box-using-input-box-value
        function filter(search) {
            var select = document.getElementById("materialsList");
            clearList(document.getElementById("projectsList"));
            for (var i = 0; i < select.length; i++) {
                var txt = select.options[i].text;
                var include = txt.toLowerCase().startsWith(search.toLowerCase());
                select.options[i].style.display = include ? 'list-item' : 'none';
            }
            document.getElementById('materialsList').selectedIndex = -1;
        }

        //sorts a list
        function sortList(item) {
            var list, i, switching, b, shouldSwitch;
            list = document.getElementById(item);
            switching = true;
            while (switching) {
                switching = false;
                b = list.getElementsByTagName("option");
                for (i = 0; i < (b.length - 1); i++) {
                    shouldSwitch = false;
                    if (b[i].innerHTML.toLowerCase() > b[i + 1].innerHTML.toLowerCase()) {
                        shouldSwitch = true;
                        break;
                    }
                }
                if (shouldSwitch) {
                    b[i].parentNode.insertBefore(b[i + 1], b[i]);
                    switching = true;
                }
            }
        }

        //checks if the user submits a material and its name already exists on file
        //duplicates currently overwrite existing materials
        function checkDupes() {
            var list = document.getElementById('materialsList');
            var check = document.getElementById('matName').value;
            for (let i = 0; i < list.length; i++) {
                if (list[i].value == check) {
                    if (confirm('Duplicate found, please confirm overwrite, or rename')) {
                        selectHack();
                        return TRUE;
                    } else { 
                        return FALSE
                    }
                }
            }
            return TRUE;
        }

        //returns false if no material is selected, or user hits cancel on 'confirm' dialog
        function checkDeletable() {
            //first check if a material is selected
            var list = document.getElementById('materialsList')
            var rel = document.getElementById('projectsList')
            var index = list.selectedIndex;
            if (index == -1) {
                return false;
            }
            //next, check if there are related projects
            if (rel.length != 0) {
                alert('This material is being used in a project and can\'t be deleted');
                return false;
            }
            return confirm('Are you sure you want to delete \"' + list.value + '\"?');
        }

        //populates form 1 with selected material data
        function showDetails() {
            var selection = document.getElementById('materialsList').value;
            allMatStr.objects.forEach(e => {
                if (selection == e.name) {
                    document.getElementById("matName").value = e.name;
                    document.getElementById("matType").value = e.materialType;
                    document.getElementById("matQty").value = e.qty;
                    document.getElementById("matCost").value = e.cost;
                    document.getElementById("matECost").value = e.extcost;
                    document.getElementById("matNote").value = e.notes;
                }
            });
            showRelProjects();
        }

        //populates "related projects" select
        function showRelProjects() {
            var selection = document.getElementById('materialsList').value;
            var proList = document.getElementById("projectsList");
            //clear the list before added new options
            clearList(proList);
            allMatStr.objects.forEach(e => {
                if (selection == e.name && e.relProjects) {
                    for (let i = 0; i < e.relProjects.length; i++) {
                        proList.options[proList.options.length] = new Option(e.relProjects[i]);
                    }
                    return;
                }
            });

        }

        function clearList(sel) {
            var i, length = sel.options.length;
            for (i = length; i >= 0; i--) {
                sel.remove(i);
            }
        }

        //clear all forms
        function clearForms() {
            document.getElementById('materialsList').selectedIndex = -1;
            document.getElementById('projectsList').selectedIndex = -1;
            clearList(document.getElementById("projectsList"));
            //clearList(document.getElementById("materialsList"));
        }

        //passes 
        function selectHack() {
            var ls = document.getElementById('projectsList');
            for (let i = 0; i < ls.options.length; i++) {
                ls.options[i].selected = true;
            }
        }
    </script>
</head>

<body>
    <!-- The following notation is .ejs specific.  should look into utilizing this more-->
    <h1><%= title %></h1>
    <% include  templates/header.ejs%>
    <br>

    <!-- the header is no-wrapped
            each "column" is grouped as a "form" and each form is floated left 
            so their elements wrap together
        -->

    <!-- Column 1 -->
    <form class="forms" method="POST">
        <div id="row1">
            <div id="leftDiv">
                <h1> Details </h1>
                <li>
                    <label for="name">Name</label>
                    <input id="matName" type="text" name="name" maxlength="30" style="width: 180px">
                </li>
                <li>
                    <!-- this select isn't being captured on post-->
                    <label for="type">Type</label>
                    <select id="matType" name="materialType" id="type">
                        <% for(let i = 0; i < types.length; i++) { %>
                        <option value="<%= types[i] %>"><%= types[i] %></option>
                        <% } %>
                    </select>
                </li>
                <li>
                    <!-- maxlength doesn't work for number fields, so the script in those fields
                        limits input to defined maxlength -->
                    <label for="qty">Quantity</label>
                    <input id="matQty" type="number" name="qty" maxlength="3" min="0" max="999" oninput="javascript: 
                    if (this.value.length > 3) this.value = this.value.slice(0, this.maxLength);">
                </li>
                <li>
                    <label for="cost">Cost</label>
                    <input id="matCost" type="number" name="cost" step="0.01" maxlength="3" min="0.01" max="999">
                </li>
                <li>
                    <label for="extcost">Extended Cost</label>
                    <input id="matECost" type="number" name="extcost" step="0.01" maxlength="3" min="0.01" max="999">
                </li>
                <li>
                    <label for="notes">Notes</label>
                    <textarea id="matNote" name="notes" onkeyup="adjust_textarea(this)"></textarea>
                </li>
                <li>
                    <input type="submit" value="Submit" onclick="return checkDupes()" formaction="/materials/submitted">
                    <input type="reset" value="Clear" onclick="clearForms()" style="float: right;">
                </li>
            </div>

            <!-- Column 2 -->
            <!-- TODO.  when form gets cleared, allMaterials doesn't de-filter-->
            <div id="centerDiv">
                <h1> Search </h1>
                <li>
                    <label for="search">Filter</label>
                    <input type="text" id="search" maxlength="30" onkeyup="filter(this.value)">
                </li>
                <!-- loops through all materials, lists in selection box -->
                <select class="box" name="box1" id="materialsList" onclick="showDetails()" onkeyup="showDetails()"
                    style="height: 260px" size="999">
                    <% allMaterials.objects.forEach(function(item){ %>
                    <option value="<%= item.name %>"> <%= item.name %> </option>
                    <% });%>
                </select>
                <li>
                    <input type="submit" value="Delete Material" onclick="return checkDeletable()"
                        formaction="/materials/deleted">
                </li>
            </div>

            <!-- Column 3 -->
            <div id="rightDiv">
                <h1> Related Projects </h1>
                <select class="box" id="projectsList" name="relProjects" size="999" multiple="multiple">
                </select>
            </div>
        </div>
    </form>

    <script> sortList("materialsList"); sortList("projectsList");</script>
</body>


</html>